@inject NavigationManager Navigation

@if (IsVisible)
{
    <div class="modal d-flex align-items-center justify-content-center" style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; z-index: 9999; background-color: rgba(0, 0, 0, 0.5);">
        <div class="modal-content p-4 rounded d-flex flex-column justify-content-center align-items-center" style="background-color: white; width: 50%; height: 50%; overflow: auto;">
            <p class="text-center m-auto" style="white-space: normal; font-size: 1.2rem;">@Content</p>
            <button @onclick="CloseAndNavigate" class="btn btn-primary mt-3 d-block" style=" font-size: 1.2rem;">OK</button>
        </div>
    </div>
}

@code {
    [Parameter]
    public bool IsVisible { get; set; }

    [Parameter]
    public string Content { get; set; }

    [Parameter]
    public EventCallback<bool> IsVisibleChanged { get; set; }

    private async Task CloseAndNavigate()
    {
        IsVisible = false;
        await IsVisibleChanged.InvokeAsync(IsVisible);
        Navigation.NavigateTo("/");
    }
}
